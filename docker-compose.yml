version: "3.9"

services:
  # Traefik to handle Let's Encrypt, because certbot isn't fun.
  traefik:
    image: traefik:v2.5
    command:
      - "--providers.docker"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - nginx
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "${LETSENCRYPT_MNT}:/letsencrypt"

  # Nginx container with RTMP support and HLS re-encoding.
  nginx:
    image: alfg/nginx-rtmp:latest
    init: true
    volumes:
      - nginx_logs:/var/log/nginx
      - ./overlay/nginx/nginx.conf:/etc/nginx/nginx.conf.template
      - ./overlay/nginx/player.html:/www/static/player.html
      - ./overlay/nginx/inc:/www/static/inc
    labels:
      # Forward HTTP to HTTPS
      - "traefik.http.middlewares.nginx-https.redirectscheme.scheme=https"
      - "traefik.http.routers.nginx.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.nginx.entryPoints=web"
      - "traefik.http.routers.nginx.middlewares=nginx-https"

      # Serve nginx via HTTPS
      - "traefik.http.services.nginx-ssl.loadbalancer.server.port=80"
      - "traefik.http.routers.nginx-ssl.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.nginx-ssl.entryPoints=websecure"
      - "traefik.http.routers.nginx-ssl.tls=true"
      - "traefik.http.routers.nginx-ssl.tls.certresolver=myresolver"

  # Prometheus Exporter to count HLS viewers, nginx_hls_viewer.
  nginx_hls_prometheus_exporter:
    depends_on:
      - nginx
    build: ./container/nginx-hls-prometheus-exporter/
    ports:
      - "9101:9101"
    volumes:
      - nginx_logs:/var/log/nginx

  # Prometheus Exporter to count RTMP viewers, nginx_rtmp_viewer.
  nginx_rtmp_prometheus_exporter:
    depends_on:
      - nginx
    build: ./container/nginx-rtmp-prometheus-exporter/
    ports:
      - "9102:9102"

  # Prometheus Node Exporter, exposed at port 9100.
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    command:
      - "--path.rootfs=/host"
    network_mode: host
    pid: host
    volumes:
      - "/:/host:ro,rslave"

  # BBB Live Streaming connects to the remote BBB session, starts a recording
  # and streams to Nginx via RTMP.
  bbb_streamer:
    depends_on:
      - bbb_streamer_mount_perm
      - nginx
    build: ./container/bbb-streamer/
    init: true
    shm_size: '2gb'
    environment:
      - BBB_STREAM_URL=rtmp://nginx:1935/stream/bbb
      - BBB_DOWNLOAD_MEETING=true
    env_file: .env
    volumes:
      - "${VIDEO_MNT}:/video"

  # This container fixes the user permissions for the /video mount point used in
  # bbb-streamer to store downloadable video records.
  # https://github.com/aau-zid/BigBlueButton-liveStreaming/issues/137
  bbb_streamer_mount_perm:
    build: ./container/bbb-streamer-mount-perm/
    volumes:
      - "${VIDEO_MNT}:/video"

volumes:
  # Shared nginx logs between Nginx and the HLS Prometheus exporter.
  nginx_logs:
